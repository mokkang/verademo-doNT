name: Veracode-SAST
'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: windows-2019
 
    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
      - name: Restore dependencies
        run: nuget restore VeraDemoNet.sln
      - name: Clean Default Build
        run: 'msbuild VeraDemoNet.sln /t:clean'
      - name: Build - was dotnet build --no-restore
        run: >-
          msbuild.exe VeraDemoNet.sln /p:DeployOnBuild=true
          /p:WebPublishMethod=Package /p:PackageAsSingleFile=true
          /p:SkipInvalidConfigurations=true /p:PackageLocation=./..
          /p:DebugSymbols=true /t:build
      - name: List files in the repository and copy artifact
        run: |
          dir ${{ github.workspace }}
          mkdir -p ${{ github.workspace }}/artifact
          copy VeraDemoNet.zip ${{ github.workspace }}/artifact
          dir ${{ github.workspace }}/artifact
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Check out main branch
        uses: actions/checkout@v2
        with:
          path: '${{ github.workspace }}/artifact'
      - name: GitHub Action for Bash
        # You may pin to the exact commit or the version.
        # uses: lafernando/github-action-bash@50aaa1a696ff3b029db96ae429a4de147a3ce9bd
        uses: lafernando/github-action-bash@v1.0 
        with: 
          script: 
            args: 
              - ls -la
              - pwd
              - zip -r dotCom.zip -d -p ${{ github.workspace }}/
              - curl -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
              - unzip pipeline-scan-LATEST.zip
              - chmod +x pipeline-scan.jar
              - java -jar pipeline-scan.jar -f  ${{ github.workspace }}/artifact/dotCom.zip -vid '${{ secrets.VERACODE_API-ID }}' -vkey '${{ secrets.VERACODE_API_KEY }}' -id true 
      - name: Veracode Pipeline-Scan
      # You may pin to the exact commit or the version.
        uses: veracode/Veracode-pipeline-scan-action@c94abab5dc83cccc825c05120b746835fc6f673a
      #  uses: veracode/Veracode-pipeline-scan-action@pipeline-scan-beta-v0.0.4
        with:
        # vid
          vid: '${{secrets.VERACODE_API_ID}}' 
        # vkey
          vkey: '${{secrets.VERACODE_API_KEY}}'
          # Filename of the packaged application to upload and scan.
          file: 'dotCom.zip'
          # GITHUB_TOKEN or a repo scoped PAT.
          token: '{{ github.token }} '
  #         Fail the pipeline job if the scan finds flaws of the specified CWEs. Enter a comma-separated list of CWE IDs.
     #     fail_on_cwe: # optional
          # Filter the flaws that exist in the specified baseline file and show only the additional flaws in the current scan.
     #     baseline_file: # optional
          # Name of the Veracode default policy rule to apply to the scan results. You can only use this parameter with a Veracode default policy.
     #     policy_name: # optional
          # Name of the local policy file you want to apply to the scan results. To download this file, use the --request_policy parameter.
     #     policy_file: # optional
     #     # Amount of time, in minutes, for the Pipeline Scan to wait before reporting an unsuccessful scan if the scan does not complete. Default is 60 minutes, which is also the maximum value.
     #     timeout: # optional
          # Enter true to show detailed messages for each issue in the results summary.
          issue_details: true # optional
          # Enter true to show a human-readable results summary on the console. Default is true.
     #     summary_display: # optional
          # Enter true to show the JSON containing the scan results on the console. Default is false.
     #     json_display: # optional
          # Enter true to display detailed messages in the scan results. Default is false.
     #     verbose: # optional
          # Enter true to save the scan results as a human-readable file. Default is false.
     #     summary_output: # optional
          # Enter the filename of the scan results summary file. The file is stored in the current directory. Default is results.txt.
     #     summary_output_file: # optional
          # Enter true to save the scan results in JSON format. Default is true.
     #     json_output: # optional
          # Rename the JSON file that contains the scan results. The file is stored in the current directory. Default filename is results.json.
     #     json_output_file: # optional
          # Enter the filename in the current directory to save results that violate pass-fail criteria. Default is filtered_results.json.
     #     filtered_json_output_file: # optional
     #     # Enter the name of the CI/CD code repository that runs a Pipeline Scan. This parameter adds the repository name to the scan results, which can help you track scans across repositories.
     #     project_name: # optional
          # Enter the source control URL for the CI/CD code repository that runs a Pipeline Scan.
     #     project_url: # optional
          # Enter the source control reference, revision, or branch for the CI/CD code repository that runs a Pipeline Scan.
     #     project_ref: # optional
          # Enter the [application profile](https://docs.veracode.com/r/request_profile) ID for the application you want to upload and scan.
     #     app_id: # optional
          # Enter one these values, which are case-sensitive, for the type of development stage: Development, Testing, Release.
     #     development_stage: # optional
          # Enable debug mode. 1 for on
     #     debug: # optional
          # Enable the storage of a baseline file. Takes true or fales
     #     store_baseline_file: # optional
          # Enter the branch name where the baseline file should be stored
     #     store_baseline_file_branch: # optional
          # From which results should the baseline file be created. standard = full results || filtered = filtered results
     #     create_baseline_from: # optional
          # Fail the build upon findings. Takes true or false
     #     fail_build: # optional     
      #    allow_failure: true
  Veracode-Policy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out main branch
        uses: actions/checkout@v2
        with:
          path: '${{ github.workspace }}/artifact'
      - name: Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
            appname: dotdotdot
            createprofile: false
            filepath: '../workspace/artifact/VeraDemoNet.zip'
            vid: '${{ secrets.VERACODE_API_ID }}'
            vkey: '${{ secrets.VERACODE_API_KEY }}'
  #          createsandbox: 'true'
  #          sandboxname: 'SANDBOXNAME'
  #          scantimeout: 0
  #          exclude: '*.js'
  #          include: '*.war'
  #          criticality: 'VeryHigh'

